import { LitElement } from 'lit-element';
import "./child-elements/kyc-account";
import "./child-elements/send-token";
import "./child-elements/withdraw-elem";
import "./child-elements/payment-methods";
import "./child-elements/kyc-status-elem";
export declare class IconBridgeWidget extends LitElement {
    private hideButton;
    private mainModalWrapper;
    private overlay;
    private menuTooltipMain;
    private menuTooltipEmail;
    private animationUnderline;
    private floatingHeader;
    private inputEmail;
    private changeEmail;
    private signInModalView;
    private homeModalView;
    private checkEmailModalView;
    private processingView;
    private signingInView;
    private errorView;
    private transactionDetailView;
    private kycAccountElemView;
    private sendTokenElemView;
    private paymentMethodsElemView;
    private kycStatusElemView;
    private activeModalView;
    private notification;
    private emailError;
    private bridge;
    private emailInput;
    private emailErrMsg;
    private transactions;
    private selectedTransaction;
    private user;
    private userContact;
    private userKycData;
    private kycChecks;
    private userTokensMap;
    private selectedToken;
    private linkedCreditCards;
    private linkedBankAccounts;
    private selectedAction;
    private processingTitle;
    private processingSvg;
    private error;
    private notificationMessage;
    private previousView;
    private viewAddressView;
    private qrCodeContainer;
    private lastScrollPosition;
    private floatingHeaderActive;
    constructor();
    private resetProperties;
    static styles: any[];
    protected firstUpdated(_changedProperties: any): void;
    connectedCallback(): void;
    private handleBriWidgetEvent;
    private reloadBriBalanceAndPaymentMethods;
    private showModalView;
    private setActiveModalView;
    private refreshBaseData;
    private refreshPrimeTrustData;
    private establishIntervals;
    private clearIntervals;
    private loadUserBriBalance;
    private loadUserTokens;
    private loadUserKycData;
    private handleKycStatusChanges;
    private loadUserPrimeTrustContact;
    private signOut;
    private submitLoginForm;
    private handleEmailInput;
    private loginResendEmail;
    private magicLogin;
    private loadBridgeTransactions;
    private loadIcxTransactions;
    private handleError;
    private showChangeEmail;
    private hideEmailChangeShowMain;
    backToHomeView(): void;
    private showPaymentMethods;
    private showWithdrawalPaymentMethods;
    private onBridgeButtonClick;
    private showWidget;
    private hideWidget;
    private onMenuTriggerClick;
    private onOverlayClick;
    private _handleSignInKeyDown;
    private _handleChangeEmailKeyDown;
    private updateEmail;
    private handleTokenTransfer;
    private handleDepositEvent;
    private handleWithdrawEvent;
    private reloadLinkedCredCards;
    private reloadLinkedBankAccounts;
    private handleAccountCreated;
    private emailChange;
    private handleOnWithdrawFundsClick;
    private handleOnViewBlockchainAddressClick;
    private scrollHeaderLogic;
    private showProcessingView;
    private onKycStatusClick;
    private onDepositClick;
    private onAssetClick;
    private onCopyAddressClick;
    private showNotification;
    private closeNotification;
    private getTitleBalance;
    private onTransactionClick;
    private getTransactionsHtml;
    private getTransactionDetailHtml;
    private getKycStatusTitleFromElem;
    render(): import("lit-element").TemplateResult;
    private getTransactionNavHtml;
}
declare global {
    interface HTMLElementTagNameMap {
        'icon-bridge-widget': IconBridgeWidget;
    }
}
//# sourceMappingURL=icon-bridge-widget.d.ts.map